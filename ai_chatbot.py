# -*- coding: utf-8 -*-
"""AI chatbot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16q2CKQiQa7NSHiCt3envrV7l-l-doR8p
"""

import streamlit as st
import openai
import os
from datetime import datetime

# ✅ Set your OpenAI API key from environment variable
openai.api_key = os.getenv("OPENAI_API_KEY")

# ✅ Page configuration
st.set_page_config(page_title="AI Chatbot", page_icon="🤖")
st.title("🤖 Chat with GPT")

# ✅ Initialize chat history
if "messages" not in st.session_state:
    st.session_state.messages = [
        {"role": "system", "content": "You are a helpful assistant."}
    ]

# ✅ User input
user_input = st.text_input("You:")

# ✅ Process input and get response
if user_input:
    st.session_state.messages.append({"role": "user", "content": user_input})

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=st.session_state.messages
        )
        reply = response.choices[0].message['content']
    except Exception as e:
        reply = f"⚠️ Error: {str(e)}"

    st.session_state.messages.append({"role": "assistant", "content": reply})

# ✅ Display messages
for msg in st.session_state.messages[1:]:  # Skip system message
    with st.chat_message(msg["role"]):
        st.markdown(msg["content"])

# ✅ Reset and Save Buttons
col1, col2 = st.columns(2)

with col1:
    if st.button("🔄 Reset Chat"):
        st.session_state.messages = [
            {"role": "system", "content": "You are a helpful assistant."}
        ]
        st.experimental_rerun()

with col2:
    if st.button("💾 Save Chat"):
        now = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
        filename = f"chat_{now}.txt"
        with open(filename, "w", encoding="utf-8") as f:
            for msg in st.session_state.messages[1:]:
                role = "You" if msg["role"] == "user" else "Bot"
                f.write(f"{role}: {msg['content']}\n")
        st.success(f"✅ Chat saved to {filename}")

